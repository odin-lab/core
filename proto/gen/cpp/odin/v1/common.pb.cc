// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: odin/v1/common.proto
// Protobuf C++ Version: 6.31.1

#include "odin/v1/common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace odin {
namespace v1 {

inline constexpr MessageInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR MessageInfo::MessageInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MessageInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageInfoDefaultTypeInternal() {}
  union {
    MessageInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;

inline constexpr AudioData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sample_rate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AudioData::AudioData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioDataDefaultTypeInternal() {}
  union {
    AudioData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioDataDefaultTypeInternal _AudioData_default_instance_;
}  // namespace v1
}  // namespace odin
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_odin_2fv1_2fcommon_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_odin_2fv1_2fcommon_2eproto = nullptr;
const ::uint32_t
    TableStruct_odin_2fv1_2fcommon_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::MessageInfo, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::MessageInfo, _impl_.timestamp_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::AudioData, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::AudioData, _impl_.audio_data_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::AudioData, _impl_.sample_rate_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::odin::v1::MessageInfo)},
        {5, sizeof(::odin::v1::AudioData)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::odin::v1::_MessageInfo_default_instance_._instance,
    &::odin::v1::_AudioData_default_instance_._instance,
};
const char descriptor_table_protodef_odin_2fv1_2fcommon_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024odin/v1/common.proto\022\007odin.v1\"+\n\013Messa"
    "geInfo\022\034\n\ttimestamp\030\001 \001(\003R\ttimestamp\"K\n\t"
    "AudioData\022\035\n\naudio_data\030\001 \001(\014R\taudioData"
    "\022\037\n\013sample_rate\030\002 \001(\005R\nsampleRateBW\n\013com"
    ".odin.v1B\013CommonProtoP\001\242\002\003OXX\252\002\007Odin.V1\312"
    "\002\007Odin\\V1\342\002\023Odin\\V1\\GPBMetadata\352\002\010Odin::"
    "V1b\006proto3"
};
static ::absl::once_flag descriptor_table_odin_2fv1_2fcommon_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_odin_2fv1_2fcommon_2eproto = {
    false,
    false,
    250,
    descriptor_table_protodef_odin_2fv1_2fcommon_2eproto,
    "odin/v1/common.proto",
    &descriptor_table_odin_2fv1_2fcommon_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_odin_2fv1_2fcommon_2eproto::offsets,
    file_level_enum_descriptors_odin_2fv1_2fcommon_2eproto,
    file_level_service_descriptors_odin_2fv1_2fcommon_2eproto,
};
namespace odin {
namespace v1 {
// ===================================================================

class MessageInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MessageInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_._has_bits_);
};

MessageInfo::MessageInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MessageInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.MessageInfo)
}
MessageInfo::MessageInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MessageInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MessageInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MessageInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MessageInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:odin.v1.MessageInfo)
  SharedDtor(*this);
}
inline void MessageInfo::SharedDtor(MessageLite& self) {
  MessageInfo& this_ = static_cast<MessageInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MessageInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MessageInfo(arena);
}
constexpr auto MessageInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MessageInfo),
                                            alignof(MessageInfo));
}
constexpr auto MessageInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MessageInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MessageInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MessageInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MessageInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MessageInfo>(), &MessageInfo::ByteSizeLong,
              &MessageInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_._cached_size_),
          false,
      },
      &MessageInfo::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MessageInfo_class_data_ =
        MessageInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MessageInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MessageInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MessageInfo_class_data_.tc_table);
  return MessageInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
MessageInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MessageInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::MessageInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MessageInfo, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.MessageInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MessageInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MessageInfo& this_ = static_cast<const MessageInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MessageInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MessageInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.MessageInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.MessageInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MessageInfo::ByteSizeLong(const MessageLite& base) {
  const MessageInfo& this_ = static_cast<const MessageInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MessageInfo::ByteSizeLong() const {
  const MessageInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.MessageInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 timestamp = 1 [json_name = "timestamp"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MessageInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageInfo*>(&to_msg);
  auto& from = static_cast<const MessageInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.MessageInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_timestamp() != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageInfo::InternalSwap(MessageInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioData, _impl_._has_bits_);
};

AudioData::AudioData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.AudioData)
}
PROTOBUF_NDEBUG_INLINE AudioData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::AudioData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audio_data_(arena, from.audio_data_) {}

AudioData::AudioData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sample_rate_ = from._impl_.sample_rate_;

  // @@protoc_insertion_point(copy_constructor:odin.v1.AudioData)
}
PROTOBUF_NDEBUG_INLINE AudioData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        audio_data_(arena) {}

inline void AudioData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sample_rate_ = {};
}
AudioData::~AudioData() {
  // @@protoc_insertion_point(destructor:odin.v1.AudioData)
  SharedDtor(*this);
}
inline void AudioData::SharedDtor(MessageLite& self) {
  AudioData& this_ = static_cast<AudioData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.audio_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioData(arena);
}
constexpr auto AudioData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioData),
                                            alignof(AudioData));
}
constexpr auto AudioData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioData>(), &AudioData::ByteSizeLong,
              &AudioData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioData, _impl_._cached_size_),
          false,
      },
      &AudioData::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioData_class_data_ =
        AudioData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioData_class_data_.tc_table);
  return AudioData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
AudioData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AudioData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::AudioData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 sample_rate = 2 [json_name = "sampleRate"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioData, _impl_.sample_rate_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AudioData, _impl_.sample_rate_)}},
    // bytes audio_data = 1 [json_name = "audioData"];
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AudioData, _impl_.audio_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes audio_data = 1 [json_name = "audioData"];
    {PROTOBUF_FIELD_OFFSET(AudioData, _impl_.audio_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 sample_rate = 2 [json_name = "sampleRate"];
    {PROTOBUF_FIELD_OFFSET(AudioData, _impl_.sample_rate_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AudioData::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.AudioData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.audio_data_.ClearNonDefaultToEmpty();
  }
  _impl_.sample_rate_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioData& this_ = static_cast<const AudioData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.AudioData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes audio_data = 1 [json_name = "audioData"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_audio_data().empty()) {
      const ::std::string& _s = this_._internal_audio_data();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // int32 sample_rate = 2 [json_name = "sampleRate"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_sample_rate() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_sample_rate(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.AudioData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioData::ByteSizeLong(const MessageLite& base) {
  const AudioData& this_ = static_cast<const AudioData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioData::ByteSizeLong() const {
  const AudioData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.AudioData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes audio_data = 1 [json_name = "audioData"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_audio_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_audio_data());
      }
    }
    // int32 sample_rate = 2 [json_name = "sampleRate"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_sample_rate() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_sample_rate());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioData*>(&to_msg);
  auto& from = static_cast<const AudioData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.AudioData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_audio_data().empty()) {
        _this->_internal_set_audio_data(from._internal_audio_data());
      } else {
        if (_this->_impl_.audio_data_.IsDefault()) {
          _this->_internal_set_audio_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_sample_rate() != 0) {
        _this->_impl_.sample_rate_ = from._impl_.sample_rate_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioData::CopyFrom(const AudioData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.AudioData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioData::InternalSwap(AudioData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_data_, &other->_impl_.audio_data_, arena);
  swap(_impl_.sample_rate_, other->_impl_.sample_rate_);
}

::google::protobuf::Metadata AudioData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace odin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_odin_2fv1_2fcommon_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
