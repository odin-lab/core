// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: odin/v1/text.proto
// Protobuf C++ Version: 6.31.1

#include "odin/v1/text.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace odin {
namespace v1 {

inline constexpr TextSpeech::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        output_text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TextSpeech::TextSpeech(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TextSpeech_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextSpeechDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextSpeechDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextSpeechDefaultTypeInternal() {}
  union {
    TextSpeech _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextSpeechDefaultTypeInternal _TextSpeech_default_instance_;

inline constexpr TextOut::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        output_text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TextOut::TextOut(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TextOut_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextOutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextOutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextOutDefaultTypeInternal() {}
  union {
    TextOut _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextOutDefaultTypeInternal _TextOut_default_instance_;

inline constexpr TextComplete::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        turn_result_{nullptr},
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TextComplete::TextComplete(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TextComplete_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextCompleteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextCompleteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextCompleteDefaultTypeInternal() {}
  union {
    TextComplete _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextCompleteDefaultTypeInternal _TextComplete_default_instance_;

inline constexpr STTranscript::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transcription_{nullptr},
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR STTranscript::STTranscript(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(STTranscript_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct STTranscriptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STTranscriptDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STTranscriptDefaultTypeInternal() {}
  union {
    STTranscript _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STTranscriptDefaultTypeInternal _STTranscript_default_instance_;
}  // namespace v1
}  // namespace odin
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_odin_2fv1_2ftext_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_odin_2fv1_2ftext_2eproto = nullptr;
const ::uint32_t
    TableStruct_odin_2fv1_2ftext_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::STTranscript, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::STTranscript, _impl_.transcription_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::STTranscript, _impl_.session_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextComplete, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextComplete, _impl_.turn_result_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextComplete, _impl_.session_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextOut, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextOut, _impl_.output_text_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextOut, _impl_.session_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextSpeech, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextSpeech, _impl_.output_text_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::TextSpeech, _impl_.session_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::odin::v1::STTranscript)},
        {7, sizeof(::odin::v1::TextComplete)},
        {14, sizeof(::odin::v1::TextOut)},
        {21, sizeof(::odin::v1::TextSpeech)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::odin::v1::_STTranscript_default_instance_._instance,
    &::odin::v1::_TextComplete_default_instance_._instance,
    &::odin::v1::_TextOut_default_instance_._instance,
    &::odin::v1::_TextSpeech_default_instance_._instance,
};
const char descriptor_table_protodef_odin_2fv1_2ftext_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022odin/v1/text.proto\022\007odin.v1\032\024odin/v1/c"
    "ommon.proto\032\025odin/v1/options.proto\032\031odin"
    "/v1/text_helper.proto\"\231\001\n\014STTranscript\022B"
    "\n\rtranscription\030\001 \001(\0132\034.odin.v1.Transcri"
    "ptionResultR\rtranscription\022.\n\007session\030\002 "
    "\001(\0132\024.odin.v1.SessionInfoR\007session:\025\212\265\030\r"
    "text.segments\220\265\030\001\"\213\001\n\014TextComplete\0224\n\013tu"
    "rn_result\030\001 \001(\0132\023.odin.v1.TurnResultR\ntu"
    "rnResult\022.\n\007session\030\002 \001(\0132\024.odin.v1.Sess"
    "ionInfoR\007session:\025\212\265\030\rtext.complete\220\265\030\001\""
    "l\n\007TextOut\022\037\n\013output_text\030\001 \001(\tR\noutputT"
    "ext\022.\n\007session\030\003 \001(\0132\024.odin.v1.SessionIn"
    "foR\007session:\020\212\265\030\010text.out\220\265\030\001\"r\n\nTextSpe"
    "ech\022\037\n\013output_text\030\001 \001(\tR\noutputText\022.\n\007"
    "session\030\002 \001(\0132\024.odin.v1.SessionInfoR\007ses"
    "sion:\023\212\265\030\013text.speech\220\265\030\001BU\n\013com.odin.v1"
    "B\tTextProtoP\001\242\002\003OXX\252\002\007Odin.V1\312\002\007Odin\\V1\342"
    "\002\023Odin\\V1\\GPBMetadata\352\002\010Odin::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_odin_2fv1_2ftext_2eproto_deps[3] = {
        &::descriptor_table_odin_2fv1_2fcommon_2eproto,
        &::descriptor_table_odin_2fv1_2foptions_2eproto,
        &::descriptor_table_odin_2fv1_2ftext_5fhelper_2eproto,
};
static ::absl::once_flag descriptor_table_odin_2fv1_2ftext_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_odin_2fv1_2ftext_2eproto = {
    false,
    false,
    720,
    descriptor_table_protodef_odin_2fv1_2ftext_2eproto,
    "odin/v1/text.proto",
    &descriptor_table_odin_2fv1_2ftext_2eproto_once,
    descriptor_table_odin_2fv1_2ftext_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_odin_2fv1_2ftext_2eproto::offsets,
    file_level_enum_descriptors_odin_2fv1_2ftext_2eproto,
    file_level_service_descriptors_odin_2fv1_2ftext_2eproto,
};
namespace odin {
namespace v1 {
// ===================================================================

class STTranscript::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<STTranscript>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(STTranscript, _impl_._has_bits_);
};

void STTranscript::clear_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transcription_ != nullptr) _impl_.transcription_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void STTranscript::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
STTranscript::STTranscript(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, STTranscript_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.STTranscript)
}
PROTOBUF_NDEBUG_INLINE STTranscript::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::STTranscript& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

STTranscript::STTranscript(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const STTranscript& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, STTranscript_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  STTranscript* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transcription_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transcription_)
                : nullptr;
  _impl_.session_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:odin.v1.STTranscript)
}
PROTOBUF_NDEBUG_INLINE STTranscript::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void STTranscript::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transcription_),
           0,
           offsetof(Impl_, session_) -
               offsetof(Impl_, transcription_) +
               sizeof(Impl_::session_));
}
STTranscript::~STTranscript() {
  // @@protoc_insertion_point(destructor:odin.v1.STTranscript)
  SharedDtor(*this);
}
inline void STTranscript::SharedDtor(MessageLite& self) {
  STTranscript& this_ = static_cast<STTranscript&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.transcription_;
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL STTranscript::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) STTranscript(arena);
}
constexpr auto STTranscript::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(STTranscript),
                                            alignof(STTranscript));
}
constexpr auto STTranscript::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_STTranscript_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &STTranscript::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<STTranscript>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &STTranscript::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<STTranscript>(), &STTranscript::ByteSizeLong,
              &STTranscript::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(STTranscript, _impl_._cached_size_),
          false,
      },
      &STTranscript::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2ftext_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull STTranscript_class_data_ =
        STTranscript::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
STTranscript::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&STTranscript_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(STTranscript_class_data_.tc_table);
  return STTranscript_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
STTranscript::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(STTranscript, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    STTranscript_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::STTranscript>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(STTranscript, _impl_.session_)}},
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(STTranscript, _impl_.transcription_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    {PROTOBUF_FIELD_OFFSET(STTranscript, _impl_.transcription_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(STTranscript, _impl_.session_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::TranscriptionResult>()},
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void STTranscript::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.STTranscript)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.transcription_ != nullptr);
      _impl_.transcription_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL STTranscript::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const STTranscript& this_ = static_cast<const STTranscript&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL STTranscript::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const STTranscript& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.STTranscript)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.transcription_, this_._impl_.transcription_->GetCachedSize(), target,
        stream);
  }

  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.STTranscript)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t STTranscript::ByteSizeLong(const MessageLite& base) {
  const STTranscript& this_ = static_cast<const STTranscript&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t STTranscript::ByteSizeLong() const {
  const STTranscript& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.STTranscript)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transcription_);
    }
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void STTranscript::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STTranscript*>(&to_msg);
  auto& from = static_cast<const STTranscript&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.STTranscript)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.transcription_ != nullptr);
      if (_this->_impl_.transcription_ == nullptr) {
        _this->_impl_.transcription_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transcription_);
      } else {
        _this->_impl_.transcription_->MergeFrom(*from._impl_.transcription_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STTranscript::CopyFrom(const STTranscript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.STTranscript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void STTranscript::InternalSwap(STTranscript* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STTranscript, _impl_.session_)
      + sizeof(STTranscript::_impl_.session_)
      - PROTOBUF_FIELD_OFFSET(STTranscript, _impl_.transcription_)>(
          reinterpret_cast<char*>(&_impl_.transcription_),
          reinterpret_cast<char*>(&other->_impl_.transcription_));
}

::google::protobuf::Metadata STTranscript::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextComplete::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TextComplete>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TextComplete, _impl_._has_bits_);
};

void TextComplete::clear_turn_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.turn_result_ != nullptr) _impl_.turn_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TextComplete::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TextComplete::TextComplete(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextComplete_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.TextComplete)
}
PROTOBUF_NDEBUG_INLINE TextComplete::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::TextComplete& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TextComplete::TextComplete(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TextComplete& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextComplete_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextComplete* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.turn_result_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.turn_result_)
                : nullptr;
  _impl_.session_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:odin.v1.TextComplete)
}
PROTOBUF_NDEBUG_INLINE TextComplete::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TextComplete::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, turn_result_),
           0,
           offsetof(Impl_, session_) -
               offsetof(Impl_, turn_result_) +
               sizeof(Impl_::session_));
}
TextComplete::~TextComplete() {
  // @@protoc_insertion_point(destructor:odin.v1.TextComplete)
  SharedDtor(*this);
}
inline void TextComplete::SharedDtor(MessageLite& self) {
  TextComplete& this_ = static_cast<TextComplete&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.turn_result_;
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TextComplete::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TextComplete(arena);
}
constexpr auto TextComplete::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TextComplete),
                                            alignof(TextComplete));
}
constexpr auto TextComplete::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TextComplete_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TextComplete::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TextComplete>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TextComplete::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TextComplete>(), &TextComplete::ByteSizeLong,
              &TextComplete::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TextComplete, _impl_._cached_size_),
          false,
      },
      &TextComplete::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2ftext_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TextComplete_class_data_ =
        TextComplete::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TextComplete::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TextComplete_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TextComplete_class_data_.tc_table);
  return TextComplete_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
TextComplete::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TextComplete, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TextComplete_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::TextComplete>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TextComplete, _impl_.session_)}},
    // .odin.v1.TurnResult turn_result = 1 [json_name = "turnResult"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TextComplete, _impl_.turn_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .odin.v1.TurnResult turn_result = 1 [json_name = "turnResult"];
    {PROTOBUF_FIELD_OFFSET(TextComplete, _impl_.turn_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(TextComplete, _impl_.session_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::TurnResult>()},
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TextComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.TextComplete)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.turn_result_ != nullptr);
      _impl_.turn_result_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TextComplete::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TextComplete& this_ = static_cast<const TextComplete&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TextComplete::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TextComplete& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.TextComplete)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.TurnResult turn_result = 1 [json_name = "turnResult"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.turn_result_, this_._impl_.turn_result_->GetCachedSize(), target,
        stream);
  }

  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.TextComplete)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TextComplete::ByteSizeLong(const MessageLite& base) {
  const TextComplete& this_ = static_cast<const TextComplete&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TextComplete::ByteSizeLong() const {
  const TextComplete& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.TextComplete)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .odin.v1.TurnResult turn_result = 1 [json_name = "turnResult"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.turn_result_);
    }
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TextComplete::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextComplete*>(&to_msg);
  auto& from = static_cast<const TextComplete&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.TextComplete)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.turn_result_ != nullptr);
      if (_this->_impl_.turn_result_ == nullptr) {
        _this->_impl_.turn_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.turn_result_);
      } else {
        _this->_impl_.turn_result_->MergeFrom(*from._impl_.turn_result_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextComplete::CopyFrom(const TextComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.TextComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextComplete::InternalSwap(TextComplete* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextComplete, _impl_.session_)
      + sizeof(TextComplete::_impl_.session_)
      - PROTOBUF_FIELD_OFFSET(TextComplete, _impl_.turn_result_)>(
          reinterpret_cast<char*>(&_impl_.turn_result_),
          reinterpret_cast<char*>(&other->_impl_.turn_result_));
}

::google::protobuf::Metadata TextComplete::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextOut::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TextOut>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TextOut, _impl_._has_bits_);
};

void TextOut::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TextOut::TextOut(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextOut_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.TextOut)
}
PROTOBUF_NDEBUG_INLINE TextOut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::TextOut& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        output_text_(arena, from.output_text_) {}

TextOut::TextOut(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TextOut& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextOut_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextOut* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:odin.v1.TextOut)
}
PROTOBUF_NDEBUG_INLINE TextOut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        output_text_(arena) {}

inline void TextOut::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_ = {};
}
TextOut::~TextOut() {
  // @@protoc_insertion_point(destructor:odin.v1.TextOut)
  SharedDtor(*this);
}
inline void TextOut::SharedDtor(MessageLite& self) {
  TextOut& this_ = static_cast<TextOut&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.output_text_.Destroy();
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TextOut::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TextOut(arena);
}
constexpr auto TextOut::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextOut),
                                            alignof(TextOut));
}
constexpr auto TextOut::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TextOut_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TextOut::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TextOut>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TextOut::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TextOut>(), &TextOut::ByteSizeLong,
              &TextOut::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TextOut, _impl_._cached_size_),
          false,
      },
      &TextOut::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2ftext_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TextOut_class_data_ =
        TextOut::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TextOut::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TextOut_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TextOut_class_data_.tc_table);
  return TextOut_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 35, 2>
TextOut::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TextOut, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TextOut_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::TextOut>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string output_text = 1 [json_name = "outputText"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TextOut, _impl_.output_text_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .odin.v1.SessionInfo session = 3 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TextOut, _impl_.session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string output_text = 1 [json_name = "outputText"];
    {PROTOBUF_FIELD_OFFSET(TextOut, _impl_.output_text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .odin.v1.SessionInfo session = 3 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(TextOut, _impl_.session_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
    "\17\13\0\0\0\0\0\0"
    "odin.v1.TextOut"
    "output_text"
  }},
};
PROTOBUF_NOINLINE void TextOut::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.TextOut)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.output_text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TextOut::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TextOut& this_ = static_cast<const TextOut&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TextOut::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TextOut& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.TextOut)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string output_text = 1 [json_name = "outputText"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_output_text().empty()) {
      const ::std::string& _s = this_._internal_output_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "odin.v1.TextOut.output_text");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.SessionInfo session = 3 [json_name = "session"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.TextOut)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TextOut::ByteSizeLong(const MessageLite& base) {
  const TextOut& this_ = static_cast<const TextOut&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TextOut::ByteSizeLong() const {
  const TextOut& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.TextOut)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string output_text = 1 [json_name = "outputText"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_output_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_output_text());
      }
    }
    // .odin.v1.SessionInfo session = 3 [json_name = "session"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TextOut::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextOut*>(&to_msg);
  auto& from = static_cast<const TextOut&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.TextOut)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_output_text().empty()) {
        _this->_internal_set_output_text(from._internal_output_text());
      } else {
        if (_this->_impl_.output_text_.IsDefault()) {
          _this->_internal_set_output_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextOut::CopyFrom(const TextOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.TextOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextOut::InternalSwap(TextOut* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.output_text_, &other->_impl_.output_text_, arena);
  swap(_impl_.session_, other->_impl_.session_);
}

::google::protobuf::Metadata TextOut::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextSpeech::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TextSpeech>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_._has_bits_);
};

void TextSpeech::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TextSpeech::TextSpeech(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextSpeech_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.TextSpeech)
}
PROTOBUF_NDEBUG_INLINE TextSpeech::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::TextSpeech& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        output_text_(arena, from.output_text_) {}

TextSpeech::TextSpeech(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TextSpeech& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextSpeech_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextSpeech* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:odin.v1.TextSpeech)
}
PROTOBUF_NDEBUG_INLINE TextSpeech::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        output_text_(arena) {}

inline void TextSpeech::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_ = {};
}
TextSpeech::~TextSpeech() {
  // @@protoc_insertion_point(destructor:odin.v1.TextSpeech)
  SharedDtor(*this);
}
inline void TextSpeech::SharedDtor(MessageLite& self) {
  TextSpeech& this_ = static_cast<TextSpeech&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.output_text_.Destroy();
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TextSpeech::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TextSpeech(arena);
}
constexpr auto TextSpeech::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextSpeech),
                                            alignof(TextSpeech));
}
constexpr auto TextSpeech::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TextSpeech_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TextSpeech::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TextSpeech>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TextSpeech::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TextSpeech>(), &TextSpeech::ByteSizeLong,
              &TextSpeech::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_._cached_size_),
          false,
      },
      &TextSpeech::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2ftext_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TextSpeech_class_data_ =
        TextSpeech::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TextSpeech::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TextSpeech_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TextSpeech_class_data_.tc_table);
  return TextSpeech_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2>
TextSpeech::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TextSpeech_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::TextSpeech>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_.session_)}},
    // string output_text = 1 [json_name = "outputText"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_.output_text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string output_text = 1 [json_name = "outputText"];
    {PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_.output_text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(TextSpeech, _impl_.session_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
    "\22\13\0\0\0\0\0\0"
    "odin.v1.TextSpeech"
    "output_text"
  }},
};
PROTOBUF_NOINLINE void TextSpeech::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.TextSpeech)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.output_text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TextSpeech::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TextSpeech& this_ = static_cast<const TextSpeech&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TextSpeech::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TextSpeech& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.TextSpeech)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string output_text = 1 [json_name = "outputText"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_output_text().empty()) {
      const ::std::string& _s = this_._internal_output_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "odin.v1.TextSpeech.output_text");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.TextSpeech)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TextSpeech::ByteSizeLong(const MessageLite& base) {
  const TextSpeech& this_ = static_cast<const TextSpeech&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TextSpeech::ByteSizeLong() const {
  const TextSpeech& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.TextSpeech)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string output_text = 1 [json_name = "outputText"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_output_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_output_text());
      }
    }
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TextSpeech::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextSpeech*>(&to_msg);
  auto& from = static_cast<const TextSpeech&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.TextSpeech)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_output_text().empty()) {
        _this->_internal_set_output_text(from._internal_output_text());
      } else {
        if (_this->_impl_.output_text_.IsDefault()) {
          _this->_internal_set_output_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextSpeech::CopyFrom(const TextSpeech& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.TextSpeech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextSpeech::InternalSwap(TextSpeech* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.output_text_, &other->_impl_.output_text_, arena);
  swap(_impl_.session_, other->_impl_.session_);
}

::google::protobuf::Metadata TextSpeech::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace odin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_odin_2fv1_2ftext_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
