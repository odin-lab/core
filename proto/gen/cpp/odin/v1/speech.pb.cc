// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: odin/v1/speech.proto
// Protobuf C++ Version: 6.31.1

#include "odin/v1/speech.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace odin {
namespace v1 {

inline constexpr SpeechTurnDetected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_{nullptr},
        is_speaking_{false},
        confidence_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpeechTurnDetected::SpeechTurnDetected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpeechTurnDetected_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpeechTurnDetectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpeechTurnDetectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpeechTurnDetectedDefaultTypeInternal() {}
  union {
    SpeechTurnDetected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpeechTurnDetectedDefaultTypeInternal _SpeechTurnDetected_default_instance_;

inline constexpr SpeechTranscriptionPartial::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transcription_{nullptr},
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SpeechTranscriptionPartial::SpeechTranscriptionPartial(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpeechTranscriptionPartial_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpeechTranscriptionPartialDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpeechTranscriptionPartialDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpeechTranscriptionPartialDefaultTypeInternal() {}
  union {
    SpeechTranscriptionPartial _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpeechTranscriptionPartialDefaultTypeInternal _SpeechTranscriptionPartial_default_instance_;

inline constexpr SpeechTranscriptionFinal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transcription_{nullptr},
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SpeechTranscriptionFinal::SpeechTranscriptionFinal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpeechTranscriptionFinal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpeechTranscriptionFinalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpeechTranscriptionFinalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpeechTranscriptionFinalDefaultTypeInternal() {}
  union {
    SpeechTranscriptionFinal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpeechTranscriptionFinalDefaultTypeInternal _SpeechTranscriptionFinal_default_instance_;
}  // namespace v1
}  // namespace odin
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_odin_2fv1_2fspeech_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_odin_2fv1_2fspeech_2eproto = nullptr;
const ::uint32_t
    TableStruct_odin_2fv1_2fspeech_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTranscriptionPartial, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTranscriptionPartial, _impl_.transcription_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTranscriptionPartial, _impl_.session_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTranscriptionFinal, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTranscriptionFinal, _impl_.transcription_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTranscriptionFinal, _impl_.session_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTurnDetected, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTurnDetected, _impl_.is_speaking_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTurnDetected, _impl_.confidence_),
        PROTOBUF_FIELD_OFFSET(::odin::v1::SpeechTurnDetected, _impl_.session_),
        1,
        2,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::odin::v1::SpeechTranscriptionPartial)},
        {7, sizeof(::odin::v1::SpeechTranscriptionFinal)},
        {14, sizeof(::odin::v1::SpeechTurnDetected)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::odin::v1::_SpeechTranscriptionPartial_default_instance_._instance,
    &::odin::v1::_SpeechTranscriptionFinal_default_instance_._instance,
    &::odin::v1::_SpeechTurnDetected_default_instance_._instance,
};
const char descriptor_table_protodef_odin_2fv1_2fspeech_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024odin/v1/speech.proto\022\007odin.v1\032\024odin/v1"
    "/common.proto\032\025odin/v1/options.proto\"\262\001\n"
    "\032SpeechTranscriptionPartial\022B\n\rtranscrip"
    "tion\030\001 \001(\0132\034.odin.v1.TranscriptionResult"
    "R\rtranscription\022.\n\007session\030\002 \001(\0132\024.odin."
    "v1.SessionInfoR\007session: \212\265\030\034speech.tran"
    "scription.partial\"\262\001\n\030SpeechTranscriptio"
    "nFinal\022B\n\rtranscription\030\001 \001(\0132\034.odin.v1."
    "TranscriptionResultR\rtranscription\022.\n\007se"
    "ssion\030\002 \001(\0132\024.odin.v1.SessionInfoR\007sessi"
    "on:\"\212\265\030\032speech.transcription.final\220\265\030\001\"\237"
    "\001\n\022SpeechTurnDetected\022\037\n\013is_speaking\030\001 \001"
    "(\010R\nisSpeaking\022\036\n\nconfidence\030\002 \001(\002R\nconf"
    "idence\022.\n\007session\030\003 \001(\0132\024.odin.v1.Sessio"
    "nInfoR\007session:\030\212\265\030\024speech.turn.detected"
    "BW\n\013com.odin.v1B\013SpeechProtoP\001\242\002\003OXX\252\002\007O"
    "din.V1\312\002\007Odin\\V1\342\002\023Odin\\V1\\GPBMetadata\352\002"
    "\010Odin::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_odin_2fv1_2fspeech_2eproto_deps[2] = {
        &::descriptor_table_odin_2fv1_2fcommon_2eproto,
        &::descriptor_table_odin_2fv1_2foptions_2eproto,
};
static ::absl::once_flag descriptor_table_odin_2fv1_2fspeech_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_odin_2fv1_2fspeech_2eproto = {
    false,
    false,
    697,
    descriptor_table_protodef_odin_2fv1_2fspeech_2eproto,
    "odin/v1/speech.proto",
    &descriptor_table_odin_2fv1_2fspeech_2eproto_once,
    descriptor_table_odin_2fv1_2fspeech_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_odin_2fv1_2fspeech_2eproto::offsets,
    file_level_enum_descriptors_odin_2fv1_2fspeech_2eproto,
    file_level_service_descriptors_odin_2fv1_2fspeech_2eproto,
};
namespace odin {
namespace v1 {
// ===================================================================

class SpeechTranscriptionPartial::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpeechTranscriptionPartial>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_._has_bits_);
};

void SpeechTranscriptionPartial::clear_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transcription_ != nullptr) _impl_.transcription_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SpeechTranscriptionPartial::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SpeechTranscriptionPartial::SpeechTranscriptionPartial(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpeechTranscriptionPartial_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.SpeechTranscriptionPartial)
}
PROTOBUF_NDEBUG_INLINE SpeechTranscriptionPartial::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::SpeechTranscriptionPartial& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SpeechTranscriptionPartial::SpeechTranscriptionPartial(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpeechTranscriptionPartial& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpeechTranscriptionPartial_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpeechTranscriptionPartial* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transcription_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transcription_)
                : nullptr;
  _impl_.session_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:odin.v1.SpeechTranscriptionPartial)
}
PROTOBUF_NDEBUG_INLINE SpeechTranscriptionPartial::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SpeechTranscriptionPartial::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transcription_),
           0,
           offsetof(Impl_, session_) -
               offsetof(Impl_, transcription_) +
               sizeof(Impl_::session_));
}
SpeechTranscriptionPartial::~SpeechTranscriptionPartial() {
  // @@protoc_insertion_point(destructor:odin.v1.SpeechTranscriptionPartial)
  SharedDtor(*this);
}
inline void SpeechTranscriptionPartial::SharedDtor(MessageLite& self) {
  SpeechTranscriptionPartial& this_ = static_cast<SpeechTranscriptionPartial&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.transcription_;
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpeechTranscriptionPartial::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpeechTranscriptionPartial(arena);
}
constexpr auto SpeechTranscriptionPartial::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpeechTranscriptionPartial),
                                            alignof(SpeechTranscriptionPartial));
}
constexpr auto SpeechTranscriptionPartial::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpeechTranscriptionPartial_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpeechTranscriptionPartial::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpeechTranscriptionPartial>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpeechTranscriptionPartial::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpeechTranscriptionPartial>(), &SpeechTranscriptionPartial::ByteSizeLong,
              &SpeechTranscriptionPartial::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_._cached_size_),
          false,
      },
      &SpeechTranscriptionPartial::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2fspeech_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpeechTranscriptionPartial_class_data_ =
        SpeechTranscriptionPartial::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpeechTranscriptionPartial::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpeechTranscriptionPartial_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpeechTranscriptionPartial_class_data_.tc_table);
  return SpeechTranscriptionPartial_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
SpeechTranscriptionPartial::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SpeechTranscriptionPartial_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::SpeechTranscriptionPartial>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_.session_)}},
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_.transcription_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    {PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_.transcription_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_.session_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::TranscriptionResult>()},
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SpeechTranscriptionPartial::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.SpeechTranscriptionPartial)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.transcription_ != nullptr);
      _impl_.transcription_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpeechTranscriptionPartial::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpeechTranscriptionPartial& this_ = static_cast<const SpeechTranscriptionPartial&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpeechTranscriptionPartial::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpeechTranscriptionPartial& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.SpeechTranscriptionPartial)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.transcription_, this_._impl_.transcription_->GetCachedSize(), target,
        stream);
  }

  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.SpeechTranscriptionPartial)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpeechTranscriptionPartial::ByteSizeLong(const MessageLite& base) {
  const SpeechTranscriptionPartial& this_ = static_cast<const SpeechTranscriptionPartial&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpeechTranscriptionPartial::ByteSizeLong() const {
  const SpeechTranscriptionPartial& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.SpeechTranscriptionPartial)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transcription_);
    }
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpeechTranscriptionPartial::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpeechTranscriptionPartial*>(&to_msg);
  auto& from = static_cast<const SpeechTranscriptionPartial&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.SpeechTranscriptionPartial)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.transcription_ != nullptr);
      if (_this->_impl_.transcription_ == nullptr) {
        _this->_impl_.transcription_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transcription_);
      } else {
        _this->_impl_.transcription_->MergeFrom(*from._impl_.transcription_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpeechTranscriptionPartial::CopyFrom(const SpeechTranscriptionPartial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.SpeechTranscriptionPartial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpeechTranscriptionPartial::InternalSwap(SpeechTranscriptionPartial* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_.session_)
      + sizeof(SpeechTranscriptionPartial::_impl_.session_)
      - PROTOBUF_FIELD_OFFSET(SpeechTranscriptionPartial, _impl_.transcription_)>(
          reinterpret_cast<char*>(&_impl_.transcription_),
          reinterpret_cast<char*>(&other->_impl_.transcription_));
}

::google::protobuf::Metadata SpeechTranscriptionPartial::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpeechTranscriptionFinal::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpeechTranscriptionFinal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_._has_bits_);
};

void SpeechTranscriptionFinal::clear_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transcription_ != nullptr) _impl_.transcription_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SpeechTranscriptionFinal::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SpeechTranscriptionFinal::SpeechTranscriptionFinal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpeechTranscriptionFinal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.SpeechTranscriptionFinal)
}
PROTOBUF_NDEBUG_INLINE SpeechTranscriptionFinal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::SpeechTranscriptionFinal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SpeechTranscriptionFinal::SpeechTranscriptionFinal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpeechTranscriptionFinal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpeechTranscriptionFinal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpeechTranscriptionFinal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transcription_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transcription_)
                : nullptr;
  _impl_.session_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:odin.v1.SpeechTranscriptionFinal)
}
PROTOBUF_NDEBUG_INLINE SpeechTranscriptionFinal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SpeechTranscriptionFinal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transcription_),
           0,
           offsetof(Impl_, session_) -
               offsetof(Impl_, transcription_) +
               sizeof(Impl_::session_));
}
SpeechTranscriptionFinal::~SpeechTranscriptionFinal() {
  // @@protoc_insertion_point(destructor:odin.v1.SpeechTranscriptionFinal)
  SharedDtor(*this);
}
inline void SpeechTranscriptionFinal::SharedDtor(MessageLite& self) {
  SpeechTranscriptionFinal& this_ = static_cast<SpeechTranscriptionFinal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.transcription_;
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpeechTranscriptionFinal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpeechTranscriptionFinal(arena);
}
constexpr auto SpeechTranscriptionFinal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpeechTranscriptionFinal),
                                            alignof(SpeechTranscriptionFinal));
}
constexpr auto SpeechTranscriptionFinal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpeechTranscriptionFinal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpeechTranscriptionFinal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpeechTranscriptionFinal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpeechTranscriptionFinal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpeechTranscriptionFinal>(), &SpeechTranscriptionFinal::ByteSizeLong,
              &SpeechTranscriptionFinal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_._cached_size_),
          false,
      },
      &SpeechTranscriptionFinal::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2fspeech_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpeechTranscriptionFinal_class_data_ =
        SpeechTranscriptionFinal::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpeechTranscriptionFinal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpeechTranscriptionFinal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpeechTranscriptionFinal_class_data_.tc_table);
  return SpeechTranscriptionFinal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
SpeechTranscriptionFinal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SpeechTranscriptionFinal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::SpeechTranscriptionFinal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_.session_)}},
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_.transcription_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    {PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_.transcription_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_.session_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::TranscriptionResult>()},
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SpeechTranscriptionFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.SpeechTranscriptionFinal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.transcription_ != nullptr);
      _impl_.transcription_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpeechTranscriptionFinal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpeechTranscriptionFinal& this_ = static_cast<const SpeechTranscriptionFinal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpeechTranscriptionFinal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpeechTranscriptionFinal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.SpeechTranscriptionFinal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.transcription_, this_._impl_.transcription_->GetCachedSize(), target,
        stream);
  }

  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.SpeechTranscriptionFinal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpeechTranscriptionFinal::ByteSizeLong(const MessageLite& base) {
  const SpeechTranscriptionFinal& this_ = static_cast<const SpeechTranscriptionFinal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpeechTranscriptionFinal::ByteSizeLong() const {
  const SpeechTranscriptionFinal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.SpeechTranscriptionFinal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transcription_);
    }
    // .odin.v1.SessionInfo session = 2 [json_name = "session"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpeechTranscriptionFinal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpeechTranscriptionFinal*>(&to_msg);
  auto& from = static_cast<const SpeechTranscriptionFinal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.SpeechTranscriptionFinal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.transcription_ != nullptr);
      if (_this->_impl_.transcription_ == nullptr) {
        _this->_impl_.transcription_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transcription_);
      } else {
        _this->_impl_.transcription_->MergeFrom(*from._impl_.transcription_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpeechTranscriptionFinal::CopyFrom(const SpeechTranscriptionFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.SpeechTranscriptionFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpeechTranscriptionFinal::InternalSwap(SpeechTranscriptionFinal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_.session_)
      + sizeof(SpeechTranscriptionFinal::_impl_.session_)
      - PROTOBUF_FIELD_OFFSET(SpeechTranscriptionFinal, _impl_.transcription_)>(
          reinterpret_cast<char*>(&_impl_.transcription_),
          reinterpret_cast<char*>(&other->_impl_.transcription_));
}

::google::protobuf::Metadata SpeechTranscriptionFinal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpeechTurnDetected::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpeechTurnDetected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_._has_bits_);
};

void SpeechTurnDetected::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ != nullptr) _impl_.session_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpeechTurnDetected::SpeechTurnDetected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpeechTurnDetected_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odin.v1.SpeechTurnDetected)
}
PROTOBUF_NDEBUG_INLINE SpeechTurnDetected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::odin::v1::SpeechTurnDetected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SpeechTurnDetected::SpeechTurnDetected(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpeechTurnDetected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpeechTurnDetected_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpeechTurnDetected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_speaking_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_speaking_),
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, is_speaking_) +
               sizeof(Impl_::confidence_));

  // @@protoc_insertion_point(copy_constructor:odin.v1.SpeechTurnDetected)
}
PROTOBUF_NDEBUG_INLINE SpeechTurnDetected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SpeechTurnDetected::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_),
           0,
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, session_) +
               sizeof(Impl_::confidence_));
}
SpeechTurnDetected::~SpeechTurnDetected() {
  // @@protoc_insertion_point(destructor:odin.v1.SpeechTurnDetected)
  SharedDtor(*this);
}
inline void SpeechTurnDetected::SharedDtor(MessageLite& self) {
  SpeechTurnDetected& this_ = static_cast<SpeechTurnDetected&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpeechTurnDetected::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpeechTurnDetected(arena);
}
constexpr auto SpeechTurnDetected::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpeechTurnDetected),
                                            alignof(SpeechTurnDetected));
}
constexpr auto SpeechTurnDetected::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpeechTurnDetected_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpeechTurnDetected::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpeechTurnDetected>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpeechTurnDetected::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpeechTurnDetected>(), &SpeechTurnDetected::ByteSizeLong,
              &SpeechTurnDetected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_._cached_size_),
          false,
      },
      &SpeechTurnDetected::kDescriptorMethods,
      &descriptor_table_odin_2fv1_2fspeech_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpeechTurnDetected_class_data_ =
        SpeechTurnDetected::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpeechTurnDetected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpeechTurnDetected_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpeechTurnDetected_class_data_.tc_table);
  return SpeechTurnDetected_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
SpeechTurnDetected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SpeechTurnDetected_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odin::v1::SpeechTurnDetected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_speaking = 1 [json_name = "isSpeaking"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpeechTurnDetected, _impl_.is_speaking_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.is_speaking_)}},
    // float confidence = 2 [json_name = "confidence"];
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.confidence_)}},
    // .odin.v1.SessionInfo session = 3 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_speaking = 1 [json_name = "isSpeaking"];
    {PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.is_speaking_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float confidence = 2 [json_name = "confidence"];
    {PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.confidence_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .odin.v1.SessionInfo session = 3 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.session_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::odin::v1::SessionInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SpeechTurnDetected::Clear() {
// @@protoc_insertion_point(message_clear_start:odin.v1.SpeechTurnDetected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.session_ != nullptr);
    _impl_.session_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.is_speaking_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.confidence_) -
        reinterpret_cast<char*>(&_impl_.is_speaking_)) + sizeof(_impl_.confidence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpeechTurnDetected::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpeechTurnDetected& this_ = static_cast<const SpeechTurnDetected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpeechTurnDetected::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpeechTurnDetected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:odin.v1.SpeechTurnDetected)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_speaking = 1 [json_name = "isSpeaking"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_is_speaking() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_is_speaking(), target);
    }
  }

  // float confidence = 2 [json_name = "confidence"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_confidence()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_confidence(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .odin.v1.SessionInfo session = 3 [json_name = "session"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:odin.v1.SpeechTurnDetected)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpeechTurnDetected::ByteSizeLong(const MessageLite& base) {
  const SpeechTurnDetected& this_ = static_cast<const SpeechTurnDetected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpeechTurnDetected::ByteSizeLong() const {
  const SpeechTurnDetected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:odin.v1.SpeechTurnDetected)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .odin.v1.SessionInfo session = 3 [json_name = "session"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
    // bool is_speaking = 1 [json_name = "isSpeaking"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_is_speaking() != 0) {
        total_size += 2;
      }
    }
    // float confidence = 2 [json_name = "confidence"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_confidence()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpeechTurnDetected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpeechTurnDetected*>(&to_msg);
  auto& from = static_cast<const SpeechTurnDetected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:odin.v1.SpeechTurnDetected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_is_speaking() != 0) {
        _this->_impl_.is_speaking_ = from._impl_.is_speaking_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_confidence()) != 0) {
        _this->_impl_.confidence_ = from._impl_.confidence_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpeechTurnDetected::CopyFrom(const SpeechTurnDetected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odin.v1.SpeechTurnDetected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpeechTurnDetected::InternalSwap(SpeechTurnDetected* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.confidence_)
      + sizeof(SpeechTurnDetected::_impl_.confidence_)
      - PROTOBUF_FIELD_OFFSET(SpeechTurnDetected, _impl_.session_)>(
          reinterpret_cast<char*>(&_impl_.session_),
          reinterpret_cast<char*>(&other->_impl_.session_));
}

::google::protobuf::Metadata SpeechTurnDetected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace odin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_odin_2fv1_2fspeech_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
