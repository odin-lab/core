// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: odin/v1/speech.proto
// Protobuf C++ Version: 6.31.1

#ifndef odin_2fv1_2fspeech_2eproto_2epb_2eh
#define odin_2fv1_2fspeech_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "odin/v1/common.pb.h"
#include "odin/v1/options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_odin_2fv1_2fspeech_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_odin_2fv1_2fspeech_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_odin_2fv1_2fspeech_2eproto;
}  // extern "C"
namespace odin {
namespace v1 {
class SpeechTranscriptionFinal;
struct SpeechTranscriptionFinalDefaultTypeInternal;
extern SpeechTranscriptionFinalDefaultTypeInternal _SpeechTranscriptionFinal_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpeechTranscriptionFinal_class_data_;
class SpeechTranscriptionPartial;
struct SpeechTranscriptionPartialDefaultTypeInternal;
extern SpeechTranscriptionPartialDefaultTypeInternal _SpeechTranscriptionPartial_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpeechTranscriptionPartial_class_data_;
class SpeechTurnDetected;
struct SpeechTurnDetectedDefaultTypeInternal;
extern SpeechTurnDetectedDefaultTypeInternal _SpeechTurnDetected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpeechTurnDetected_class_data_;
}  // namespace v1
}  // namespace odin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace odin {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SpeechTurnDetected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:odin.v1.SpeechTurnDetected) */ {
 public:
  inline SpeechTurnDetected() : SpeechTurnDetected(nullptr) {}
  ~SpeechTurnDetected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpeechTurnDetected* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpeechTurnDetected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpeechTurnDetected(::google::protobuf::internal::ConstantInitialized);

  inline SpeechTurnDetected(const SpeechTurnDetected& from) : SpeechTurnDetected(nullptr, from) {}
  inline SpeechTurnDetected(SpeechTurnDetected&& from) noexcept
      : SpeechTurnDetected(nullptr, ::std::move(from)) {}
  inline SpeechTurnDetected& operator=(const SpeechTurnDetected& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpeechTurnDetected& operator=(SpeechTurnDetected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpeechTurnDetected& default_instance() {
    return *reinterpret_cast<const SpeechTurnDetected*>(
        &_SpeechTurnDetected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SpeechTurnDetected& a, SpeechTurnDetected& b) { a.Swap(&b); }
  inline void Swap(SpeechTurnDetected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpeechTurnDetected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpeechTurnDetected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpeechTurnDetected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpeechTurnDetected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpeechTurnDetected& from) { SpeechTurnDetected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpeechTurnDetected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "odin.v1.SpeechTurnDetected"; }

 protected:
  explicit SpeechTurnDetected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpeechTurnDetected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpeechTurnDetected& from);
  SpeechTurnDetected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpeechTurnDetected&& from) noexcept
      : SpeechTurnDetected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionFieldNumber = 3,
    kIsSpeakingFieldNumber = 1,
    kConfidenceFieldNumber = 2,
  };
  // .odin.v1.SessionInfo session = 3 [json_name = "session"];
  bool has_session() const;
  void clear_session() ;
  const ::odin::v1::SessionInfo& session() const;
  [[nodiscard]] ::odin::v1::SessionInfo* PROTOBUF_NULLABLE release_session();
  ::odin::v1::SessionInfo* PROTOBUF_NONNULL mutable_session();
  void set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value);
  ::odin::v1::SessionInfo* PROTOBUF_NULLABLE unsafe_arena_release_session();

  private:
  const ::odin::v1::SessionInfo& _internal_session() const;
  ::odin::v1::SessionInfo* PROTOBUF_NONNULL _internal_mutable_session();

  public:
  // bool is_speaking = 1 [json_name = "isSpeaking"];
  void clear_is_speaking() ;
  bool is_speaking() const;
  void set_is_speaking(bool value);

  private:
  bool _internal_is_speaking() const;
  void _internal_set_is_speaking(bool value);

  public:
  // float confidence = 2 [json_name = "confidence"];
  void clear_confidence() ;
  float confidence() const;
  void set_confidence(float value);

  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);

  public:
  // @@protoc_insertion_point(class_scope:odin.v1.SpeechTurnDetected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpeechTurnDetected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::odin::v1::SessionInfo* PROTOBUF_NULLABLE session_;
    bool is_speaking_;
    float confidence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_odin_2fv1_2fspeech_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpeechTurnDetected_class_data_;
// -------------------------------------------------------------------

class SpeechTranscriptionPartial final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:odin.v1.SpeechTranscriptionPartial) */ {
 public:
  inline SpeechTranscriptionPartial() : SpeechTranscriptionPartial(nullptr) {}
  ~SpeechTranscriptionPartial() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpeechTranscriptionPartial* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpeechTranscriptionPartial));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpeechTranscriptionPartial(::google::protobuf::internal::ConstantInitialized);

  inline SpeechTranscriptionPartial(const SpeechTranscriptionPartial& from) : SpeechTranscriptionPartial(nullptr, from) {}
  inline SpeechTranscriptionPartial(SpeechTranscriptionPartial&& from) noexcept
      : SpeechTranscriptionPartial(nullptr, ::std::move(from)) {}
  inline SpeechTranscriptionPartial& operator=(const SpeechTranscriptionPartial& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpeechTranscriptionPartial& operator=(SpeechTranscriptionPartial&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpeechTranscriptionPartial& default_instance() {
    return *reinterpret_cast<const SpeechTranscriptionPartial*>(
        &_SpeechTranscriptionPartial_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SpeechTranscriptionPartial& a, SpeechTranscriptionPartial& b) { a.Swap(&b); }
  inline void Swap(SpeechTranscriptionPartial* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpeechTranscriptionPartial* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpeechTranscriptionPartial* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpeechTranscriptionPartial>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpeechTranscriptionPartial& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpeechTranscriptionPartial& from) { SpeechTranscriptionPartial::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpeechTranscriptionPartial* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "odin.v1.SpeechTranscriptionPartial"; }

 protected:
  explicit SpeechTranscriptionPartial(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpeechTranscriptionPartial(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpeechTranscriptionPartial& from);
  SpeechTranscriptionPartial(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpeechTranscriptionPartial&& from) noexcept
      : SpeechTranscriptionPartial(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTranscriptionFieldNumber = 1,
    kSessionFieldNumber = 2,
  };
  // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
  bool has_transcription() const;
  void clear_transcription() ;
  const ::odin::v1::TranscriptionResult& transcription() const;
  [[nodiscard]] ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE release_transcription();
  ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL mutable_transcription();
  void set_allocated_transcription(::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_transcription(::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value);
  ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE unsafe_arena_release_transcription();

  private:
  const ::odin::v1::TranscriptionResult& _internal_transcription() const;
  ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL _internal_mutable_transcription();

  public:
  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  bool has_session() const;
  void clear_session() ;
  const ::odin::v1::SessionInfo& session() const;
  [[nodiscard]] ::odin::v1::SessionInfo* PROTOBUF_NULLABLE release_session();
  ::odin::v1::SessionInfo* PROTOBUF_NONNULL mutable_session();
  void set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value);
  ::odin::v1::SessionInfo* PROTOBUF_NULLABLE unsafe_arena_release_session();

  private:
  const ::odin::v1::SessionInfo& _internal_session() const;
  ::odin::v1::SessionInfo* PROTOBUF_NONNULL _internal_mutable_session();

  public:
  // @@protoc_insertion_point(class_scope:odin.v1.SpeechTranscriptionPartial)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpeechTranscriptionPartial& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE transcription_;
    ::odin::v1::SessionInfo* PROTOBUF_NULLABLE session_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_odin_2fv1_2fspeech_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpeechTranscriptionPartial_class_data_;
// -------------------------------------------------------------------

class SpeechTranscriptionFinal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:odin.v1.SpeechTranscriptionFinal) */ {
 public:
  inline SpeechTranscriptionFinal() : SpeechTranscriptionFinal(nullptr) {}
  ~SpeechTranscriptionFinal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpeechTranscriptionFinal* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpeechTranscriptionFinal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpeechTranscriptionFinal(::google::protobuf::internal::ConstantInitialized);

  inline SpeechTranscriptionFinal(const SpeechTranscriptionFinal& from) : SpeechTranscriptionFinal(nullptr, from) {}
  inline SpeechTranscriptionFinal(SpeechTranscriptionFinal&& from) noexcept
      : SpeechTranscriptionFinal(nullptr, ::std::move(from)) {}
  inline SpeechTranscriptionFinal& operator=(const SpeechTranscriptionFinal& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpeechTranscriptionFinal& operator=(SpeechTranscriptionFinal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpeechTranscriptionFinal& default_instance() {
    return *reinterpret_cast<const SpeechTranscriptionFinal*>(
        &_SpeechTranscriptionFinal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SpeechTranscriptionFinal& a, SpeechTranscriptionFinal& b) { a.Swap(&b); }
  inline void Swap(SpeechTranscriptionFinal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpeechTranscriptionFinal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpeechTranscriptionFinal* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpeechTranscriptionFinal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpeechTranscriptionFinal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpeechTranscriptionFinal& from) { SpeechTranscriptionFinal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpeechTranscriptionFinal* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "odin.v1.SpeechTranscriptionFinal"; }

 protected:
  explicit SpeechTranscriptionFinal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpeechTranscriptionFinal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpeechTranscriptionFinal& from);
  SpeechTranscriptionFinal(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpeechTranscriptionFinal&& from) noexcept
      : SpeechTranscriptionFinal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTranscriptionFieldNumber = 1,
    kSessionFieldNumber = 2,
  };
  // .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
  bool has_transcription() const;
  void clear_transcription() ;
  const ::odin::v1::TranscriptionResult& transcription() const;
  [[nodiscard]] ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE release_transcription();
  ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL mutable_transcription();
  void set_allocated_transcription(::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_transcription(::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value);
  ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE unsafe_arena_release_transcription();

  private:
  const ::odin::v1::TranscriptionResult& _internal_transcription() const;
  ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL _internal_mutable_transcription();

  public:
  // .odin.v1.SessionInfo session = 2 [json_name = "session"];
  bool has_session() const;
  void clear_session() ;
  const ::odin::v1::SessionInfo& session() const;
  [[nodiscard]] ::odin::v1::SessionInfo* PROTOBUF_NULLABLE release_session();
  ::odin::v1::SessionInfo* PROTOBUF_NONNULL mutable_session();
  void set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value);
  ::odin::v1::SessionInfo* PROTOBUF_NULLABLE unsafe_arena_release_session();

  private:
  const ::odin::v1::SessionInfo& _internal_session() const;
  ::odin::v1::SessionInfo* PROTOBUF_NONNULL _internal_mutable_session();

  public:
  // @@protoc_insertion_point(class_scope:odin.v1.SpeechTranscriptionFinal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpeechTranscriptionFinal& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE transcription_;
    ::odin::v1::SessionInfo* PROTOBUF_NULLABLE session_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_odin_2fv1_2fspeech_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpeechTranscriptionFinal_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SpeechTranscriptionPartial

// .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
inline bool SpeechTranscriptionPartial::has_transcription() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transcription_ != nullptr);
  return value;
}
inline const ::odin::v1::TranscriptionResult& SpeechTranscriptionPartial::_internal_transcription() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::odin::v1::TranscriptionResult* p = _impl_.transcription_;
  return p != nullptr ? *p : reinterpret_cast<const ::odin::v1::TranscriptionResult&>(::odin::v1::_TranscriptionResult_default_instance_);
}
inline const ::odin::v1::TranscriptionResult& SpeechTranscriptionPartial::transcription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTranscriptionPartial.transcription)
  return _internal_transcription();
}
inline void SpeechTranscriptionPartial::unsafe_arena_set_allocated_transcription(
    ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transcription_);
  }
  _impl_.transcription_ = reinterpret_cast<::odin::v1::TranscriptionResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:odin.v1.SpeechTranscriptionPartial.transcription)
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE SpeechTranscriptionPartial::release_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::odin::v1::TranscriptionResult* released = _impl_.transcription_;
  _impl_.transcription_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE SpeechTranscriptionPartial::unsafe_arena_release_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:odin.v1.SpeechTranscriptionPartial.transcription)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::odin::v1::TranscriptionResult* temp = _impl_.transcription_;
  _impl_.transcription_ = nullptr;
  return temp;
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL SpeechTranscriptionPartial::_internal_mutable_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transcription_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::odin::v1::TranscriptionResult>(GetArena());
    _impl_.transcription_ = reinterpret_cast<::odin::v1::TranscriptionResult*>(p);
  }
  return _impl_.transcription_;
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL SpeechTranscriptionPartial::mutable_transcription()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::odin::v1::TranscriptionResult* _msg = _internal_mutable_transcription();
  // @@protoc_insertion_point(field_mutable:odin.v1.SpeechTranscriptionPartial.transcription)
  return _msg;
}
inline void SpeechTranscriptionPartial::set_allocated_transcription(::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transcription_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.transcription_ = reinterpret_cast<::odin::v1::TranscriptionResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:odin.v1.SpeechTranscriptionPartial.transcription)
}

// .odin.v1.SessionInfo session = 2 [json_name = "session"];
inline bool SpeechTranscriptionPartial::has_session() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_ != nullptr);
  return value;
}
inline const ::odin::v1::SessionInfo& SpeechTranscriptionPartial::_internal_session() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::odin::v1::SessionInfo* p = _impl_.session_;
  return p != nullptr ? *p : reinterpret_cast<const ::odin::v1::SessionInfo&>(::odin::v1::_SessionInfo_default_instance_);
}
inline const ::odin::v1::SessionInfo& SpeechTranscriptionPartial::session() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTranscriptionPartial.session)
  return _internal_session();
}
inline void SpeechTranscriptionPartial::unsafe_arena_set_allocated_session(
    ::odin::v1::SessionInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_);
  }
  _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:odin.v1.SpeechTranscriptionPartial.session)
}
inline ::odin::v1::SessionInfo* PROTOBUF_NULLABLE SpeechTranscriptionPartial::release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::odin::v1::SessionInfo* released = _impl_.session_;
  _impl_.session_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NULLABLE SpeechTranscriptionPartial::unsafe_arena_release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:odin.v1.SpeechTranscriptionPartial.session)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::odin::v1::SessionInfo* temp = _impl_.session_;
  _impl_.session_ = nullptr;
  return temp;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NONNULL SpeechTranscriptionPartial::_internal_mutable_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::odin::v1::SessionInfo>(GetArena());
    _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(p);
  }
  return _impl_.session_;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NONNULL SpeechTranscriptionPartial::mutable_session()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::odin::v1::SessionInfo* _msg = _internal_mutable_session();
  // @@protoc_insertion_point(field_mutable:odin.v1.SpeechTranscriptionPartial.session)
  return _msg;
}
inline void SpeechTranscriptionPartial::set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:odin.v1.SpeechTranscriptionPartial.session)
}

// -------------------------------------------------------------------

// SpeechTranscriptionFinal

// .odin.v1.TranscriptionResult transcription = 1 [json_name = "transcription"];
inline bool SpeechTranscriptionFinal::has_transcription() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transcription_ != nullptr);
  return value;
}
inline const ::odin::v1::TranscriptionResult& SpeechTranscriptionFinal::_internal_transcription() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::odin::v1::TranscriptionResult* p = _impl_.transcription_;
  return p != nullptr ? *p : reinterpret_cast<const ::odin::v1::TranscriptionResult&>(::odin::v1::_TranscriptionResult_default_instance_);
}
inline const ::odin::v1::TranscriptionResult& SpeechTranscriptionFinal::transcription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTranscriptionFinal.transcription)
  return _internal_transcription();
}
inline void SpeechTranscriptionFinal::unsafe_arena_set_allocated_transcription(
    ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transcription_);
  }
  _impl_.transcription_ = reinterpret_cast<::odin::v1::TranscriptionResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:odin.v1.SpeechTranscriptionFinal.transcription)
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE SpeechTranscriptionFinal::release_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::odin::v1::TranscriptionResult* released = _impl_.transcription_;
  _impl_.transcription_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE SpeechTranscriptionFinal::unsafe_arena_release_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:odin.v1.SpeechTranscriptionFinal.transcription)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::odin::v1::TranscriptionResult* temp = _impl_.transcription_;
  _impl_.transcription_ = nullptr;
  return temp;
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL SpeechTranscriptionFinal::_internal_mutable_transcription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transcription_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::odin::v1::TranscriptionResult>(GetArena());
    _impl_.transcription_ = reinterpret_cast<::odin::v1::TranscriptionResult*>(p);
  }
  return _impl_.transcription_;
}
inline ::odin::v1::TranscriptionResult* PROTOBUF_NONNULL SpeechTranscriptionFinal::mutable_transcription()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::odin::v1::TranscriptionResult* _msg = _internal_mutable_transcription();
  // @@protoc_insertion_point(field_mutable:odin.v1.SpeechTranscriptionFinal.transcription)
  return _msg;
}
inline void SpeechTranscriptionFinal::set_allocated_transcription(::odin::v1::TranscriptionResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transcription_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.transcription_ = reinterpret_cast<::odin::v1::TranscriptionResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:odin.v1.SpeechTranscriptionFinal.transcription)
}

// .odin.v1.SessionInfo session = 2 [json_name = "session"];
inline bool SpeechTranscriptionFinal::has_session() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_ != nullptr);
  return value;
}
inline const ::odin::v1::SessionInfo& SpeechTranscriptionFinal::_internal_session() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::odin::v1::SessionInfo* p = _impl_.session_;
  return p != nullptr ? *p : reinterpret_cast<const ::odin::v1::SessionInfo&>(::odin::v1::_SessionInfo_default_instance_);
}
inline const ::odin::v1::SessionInfo& SpeechTranscriptionFinal::session() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTranscriptionFinal.session)
  return _internal_session();
}
inline void SpeechTranscriptionFinal::unsafe_arena_set_allocated_session(
    ::odin::v1::SessionInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_);
  }
  _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:odin.v1.SpeechTranscriptionFinal.session)
}
inline ::odin::v1::SessionInfo* PROTOBUF_NULLABLE SpeechTranscriptionFinal::release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::odin::v1::SessionInfo* released = _impl_.session_;
  _impl_.session_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NULLABLE SpeechTranscriptionFinal::unsafe_arena_release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:odin.v1.SpeechTranscriptionFinal.session)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::odin::v1::SessionInfo* temp = _impl_.session_;
  _impl_.session_ = nullptr;
  return temp;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NONNULL SpeechTranscriptionFinal::_internal_mutable_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::odin::v1::SessionInfo>(GetArena());
    _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(p);
  }
  return _impl_.session_;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NONNULL SpeechTranscriptionFinal::mutable_session()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::odin::v1::SessionInfo* _msg = _internal_mutable_session();
  // @@protoc_insertion_point(field_mutable:odin.v1.SpeechTranscriptionFinal.session)
  return _msg;
}
inline void SpeechTranscriptionFinal::set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:odin.v1.SpeechTranscriptionFinal.session)
}

// -------------------------------------------------------------------

// SpeechTurnDetected

// bool is_speaking = 1 [json_name = "isSpeaking"];
inline void SpeechTurnDetected::clear_is_speaking() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_speaking_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpeechTurnDetected::is_speaking() const {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTurnDetected.is_speaking)
  return _internal_is_speaking();
}
inline void SpeechTurnDetected::set_is_speaking(bool value) {
  _internal_set_is_speaking(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:odin.v1.SpeechTurnDetected.is_speaking)
}
inline bool SpeechTurnDetected::_internal_is_speaking() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_speaking_;
}
inline void SpeechTurnDetected::_internal_set_is_speaking(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_speaking_ = value;
}

// float confidence = 2 [json_name = "confidence"];
inline void SpeechTurnDetected::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float SpeechTurnDetected::confidence() const {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTurnDetected.confidence)
  return _internal_confidence();
}
inline void SpeechTurnDetected::set_confidence(float value) {
  _internal_set_confidence(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:odin.v1.SpeechTurnDetected.confidence)
}
inline float SpeechTurnDetected::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confidence_;
}
inline void SpeechTurnDetected::_internal_set_confidence(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_ = value;
}

// .odin.v1.SessionInfo session = 3 [json_name = "session"];
inline bool SpeechTurnDetected::has_session() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_ != nullptr);
  return value;
}
inline const ::odin::v1::SessionInfo& SpeechTurnDetected::_internal_session() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::odin::v1::SessionInfo* p = _impl_.session_;
  return p != nullptr ? *p : reinterpret_cast<const ::odin::v1::SessionInfo&>(::odin::v1::_SessionInfo_default_instance_);
}
inline const ::odin::v1::SessionInfo& SpeechTurnDetected::session() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:odin.v1.SpeechTurnDetected.session)
  return _internal_session();
}
inline void SpeechTurnDetected::unsafe_arena_set_allocated_session(
    ::odin::v1::SessionInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_);
  }
  _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:odin.v1.SpeechTurnDetected.session)
}
inline ::odin::v1::SessionInfo* PROTOBUF_NULLABLE SpeechTurnDetected::release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::odin::v1::SessionInfo* released = _impl_.session_;
  _impl_.session_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NULLABLE SpeechTurnDetected::unsafe_arena_release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:odin.v1.SpeechTurnDetected.session)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::odin::v1::SessionInfo* temp = _impl_.session_;
  _impl_.session_ = nullptr;
  return temp;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NONNULL SpeechTurnDetected::_internal_mutable_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::odin::v1::SessionInfo>(GetArena());
    _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(p);
  }
  return _impl_.session_;
}
inline ::odin::v1::SessionInfo* PROTOBUF_NONNULL SpeechTurnDetected::mutable_session()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::odin::v1::SessionInfo* _msg = _internal_mutable_session();
  // @@protoc_insertion_point(field_mutable:odin.v1.SpeechTurnDetected.session)
  return _msg;
}
inline void SpeechTurnDetected::set_allocated_session(::odin::v1::SessionInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.session_ = reinterpret_cast<::odin::v1::SessionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:odin.v1.SpeechTurnDetected.session)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace odin


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // odin_2fv1_2fspeech_2eproto_2epb_2eh
