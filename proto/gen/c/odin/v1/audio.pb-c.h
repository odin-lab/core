/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: odin/v1/audio.proto */

#ifndef PROTOBUF_C_odin_2fv1_2faudio_2eproto__INCLUDED
#define PROTOBUF_C_odin_2fv1_2faudio_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "odin/v1/common.pb-c.h"
#include "odin/v1/options.pb-c.h"

typedef struct Odin__V1__AudioInputChunk Odin__V1__AudioInputChunk;
typedef struct Odin__V1__AudioOutputSpeech Odin__V1__AudioOutputSpeech;
typedef struct Odin__V1__AudioOutputVisualization
    Odin__V1__AudioOutputVisualization;

/* --- enums --- */

/* --- messages --- */

/*
 * Raw audio data chunks from microphone input
 */
struct Odin__V1__AudioInputChunk {
  ProtobufCMessage base;
  Odin__V1__AudioData *audio;
  char *client_id;
};
#define ODIN__V1__AUDIO_INPUT_CHUNK__INIT                                      \
  {PROTOBUF_C_MESSAGE_INIT(&odin__v1__audio_input_chunk__descriptor), NULL,    \
   (char *)protobuf_c_empty_string}

/*
 * Generated speech audio from TTS
 */
struct Odin__V1__AudioOutputSpeech {
  ProtobufCMessage base;
  Odin__V1__AudioData *audio;
  Odin__V1__SessionInfo *session;
};
#define ODIN__V1__AUDIO_OUTPUT_SPEECH__INIT                                    \
  {PROTOBUF_C_MESSAGE_INIT(&odin__v1__audio_output_speech__descriptor), NULL,  \
   NULL}

/*
 * Audio visualization data for frontend
 */
struct Odin__V1__AudioOutputVisualization {
  ProtobufCMessage base;
  size_t n_audio_levels;
  float *audio_levels;
  Odin__V1__SessionInfo *session;
};
#define ODIN__V1__AUDIO_OUTPUT_VISUALIZATION__INIT                             \
  {PROTOBUF_C_MESSAGE_INIT(&odin__v1__audio_output_visualization__descriptor), \
   0, NULL, NULL}

/* Odin__V1__AudioInputChunk methods */
void odin__v1__audio_input_chunk__init(Odin__V1__AudioInputChunk *message);
size_t odin__v1__audio_input_chunk__get_packed_size(
    const Odin__V1__AudioInputChunk *message);
size_t
odin__v1__audio_input_chunk__pack(const Odin__V1__AudioInputChunk *message,
                                  uint8_t *out);
size_t odin__v1__audio_input_chunk__pack_to_buffer(
    const Odin__V1__AudioInputChunk *message, ProtobufCBuffer *buffer);
Odin__V1__AudioInputChunk *
odin__v1__audio_input_chunk__unpack(ProtobufCAllocator *allocator, size_t len,
                                    const uint8_t *data);
void odin__v1__audio_input_chunk__free_unpacked(
    Odin__V1__AudioInputChunk *message, ProtobufCAllocator *allocator);
/* Odin__V1__AudioOutputSpeech methods */
void odin__v1__audio_output_speech__init(Odin__V1__AudioOutputSpeech *message);
size_t odin__v1__audio_output_speech__get_packed_size(
    const Odin__V1__AudioOutputSpeech *message);
size_t
odin__v1__audio_output_speech__pack(const Odin__V1__AudioOutputSpeech *message,
                                    uint8_t *out);
size_t odin__v1__audio_output_speech__pack_to_buffer(
    const Odin__V1__AudioOutputSpeech *message, ProtobufCBuffer *buffer);
Odin__V1__AudioOutputSpeech *
odin__v1__audio_output_speech__unpack(ProtobufCAllocator *allocator, size_t len,
                                      const uint8_t *data);
void odin__v1__audio_output_speech__free_unpacked(
    Odin__V1__AudioOutputSpeech *message, ProtobufCAllocator *allocator);
/* Odin__V1__AudioOutputVisualization methods */
void odin__v1__audio_output_visualization__init(
    Odin__V1__AudioOutputVisualization *message);
size_t odin__v1__audio_output_visualization__get_packed_size(
    const Odin__V1__AudioOutputVisualization *message);
size_t odin__v1__audio_output_visualization__pack(
    const Odin__V1__AudioOutputVisualization *message, uint8_t *out);
size_t odin__v1__audio_output_visualization__pack_to_buffer(
    const Odin__V1__AudioOutputVisualization *message, ProtobufCBuffer *buffer);
Odin__V1__AudioOutputVisualization *
odin__v1__audio_output_visualization__unpack(ProtobufCAllocator *allocator,
                                             size_t len, const uint8_t *data);
void odin__v1__audio_output_visualization__free_unpacked(
    Odin__V1__AudioOutputVisualization *message, ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Odin__V1__AudioInputChunk_Closure)(
    const Odin__V1__AudioInputChunk *message, void *closure_data);
typedef void (*Odin__V1__AudioOutputSpeech_Closure)(
    const Odin__V1__AudioOutputSpeech *message, void *closure_data);
typedef void (*Odin__V1__AudioOutputVisualization_Closure)(
    const Odin__V1__AudioOutputVisualization *message, void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor odin__v1__audio_input_chunk__descriptor;
extern const ProtobufCMessageDescriptor
    odin__v1__audio_output_speech__descriptor;
extern const ProtobufCMessageDescriptor
    odin__v1__audio_output_visualization__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_odin_2fv1_2faudio_2eproto__INCLUDED */
