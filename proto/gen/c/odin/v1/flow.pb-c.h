/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: odin/v1/flow.proto */

#ifndef PROTOBUF_C_odin_2fv1_2fflow_2eproto__INCLUDED
#define PROTOBUF_C_odin_2fv1_2fflow_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "odin/v1/common.pb-c.h"
#include "odin/v1/options.pb-c.h"
#include "odin/v1/session.pb-c.h"
#include "odin/v1/text_helper.pb-c.h"

typedef struct Odin__V1__Start Odin__V1__Start;
typedef struct Odin__V1__Stop Odin__V1__Stop;
typedef struct Odin__V1__TurnDetected Odin__V1__TurnDetected;


/* --- enums --- */

typedef enum _Odin__V1__FlowType {
  ODIN__V1__FLOW_TYPE__LLM = 0,
  ODIN__V1__FLOW_TYPE__SPEECH = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ODIN__V1__FLOW_TYPE)
} Odin__V1__FlowType;

/* --- messages --- */

struct  Odin__V1__Start
{
  ProtobufCMessage base;
  Odin__V1__FlowType flow_type;
  Odin__V1__MessageInfo *info;
};
#define ODIN__V1__START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&odin__v1__start__descriptor) \
    , ODIN__V1__FLOW_TYPE__LLM, NULL }


struct  Odin__V1__Stop
{
  ProtobufCMessage base;
  Odin__V1__FlowType flow_type;
  Odin__V1__MessageInfo *info;
};
#define ODIN__V1__STOP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&odin__v1__stop__descriptor) \
    , ODIN__V1__FLOW_TYPE__LLM, NULL }


/*
 * Flow information with role and content
 */
struct  Odin__V1__TurnDetected
{
  ProtobufCMessage base;
  size_t n_segments;
  Odin__V1__Segment **segments;
  char *text;
  Odin__V1__MessageInfo *info;
};
#define ODIN__V1__TURN_DETECTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&odin__v1__turn_detected__descriptor) \
    , 0,NULL, (char *)protobuf_c_empty_string, NULL }


/* Odin__V1__Start methods */
void   odin__v1__start__init
                     (Odin__V1__Start         *message);
size_t odin__v1__start__get_packed_size
                     (const Odin__V1__Start   *message);
size_t odin__v1__start__pack
                     (const Odin__V1__Start   *message,
                      uint8_t             *out);
size_t odin__v1__start__pack_to_buffer
                     (const Odin__V1__Start   *message,
                      ProtobufCBuffer     *buffer);
Odin__V1__Start *
       odin__v1__start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   odin__v1__start__free_unpacked
                     (Odin__V1__Start *message,
                      ProtobufCAllocator *allocator);
/* Odin__V1__Stop methods */
void   odin__v1__stop__init
                     (Odin__V1__Stop         *message);
size_t odin__v1__stop__get_packed_size
                     (const Odin__V1__Stop   *message);
size_t odin__v1__stop__pack
                     (const Odin__V1__Stop   *message,
                      uint8_t             *out);
size_t odin__v1__stop__pack_to_buffer
                     (const Odin__V1__Stop   *message,
                      ProtobufCBuffer     *buffer);
Odin__V1__Stop *
       odin__v1__stop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   odin__v1__stop__free_unpacked
                     (Odin__V1__Stop *message,
                      ProtobufCAllocator *allocator);
/* Odin__V1__TurnDetected methods */
void   odin__v1__turn_detected__init
                     (Odin__V1__TurnDetected         *message);
size_t odin__v1__turn_detected__get_packed_size
                     (const Odin__V1__TurnDetected   *message);
size_t odin__v1__turn_detected__pack
                     (const Odin__V1__TurnDetected   *message,
                      uint8_t             *out);
size_t odin__v1__turn_detected__pack_to_buffer
                     (const Odin__V1__TurnDetected   *message,
                      ProtobufCBuffer     *buffer);
Odin__V1__TurnDetected *
       odin__v1__turn_detected__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   odin__v1__turn_detected__free_unpacked
                     (Odin__V1__TurnDetected *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Odin__V1__Start_Closure)
                 (const Odin__V1__Start *message,
                  void *closure_data);
typedef void (*Odin__V1__Stop_Closure)
                 (const Odin__V1__Stop *message,
                  void *closure_data);
typedef void (*Odin__V1__TurnDetected_Closure)
                 (const Odin__V1__TurnDetected *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    odin__v1__flow_type__descriptor;
extern const ProtobufCMessageDescriptor odin__v1__start__descriptor;
extern const ProtobufCMessageDescriptor odin__v1__stop__descriptor;
extern const ProtobufCMessageDescriptor odin__v1__turn_detected__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_odin_2fv1_2fflow_2eproto__INCLUDED */
