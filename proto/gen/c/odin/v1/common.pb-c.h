/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: odin/v1/common.proto */

#ifndef PROTOBUF_C_odin_2fv1_2fcommon_2eproto__INCLUDED
#define PROTOBUF_C_odin_2fv1_2fcommon_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Odin__V1__SessionInfo Odin__V1__SessionInfo;
typedef struct Odin__V1__AudioData Odin__V1__AudioData;


/* --- enums --- */


/* --- messages --- */

/*
 * Common session information used across all messages
 */
struct  Odin__V1__SessionInfo
{
  ProtobufCMessage base;
  char *id;
  char *status;
  char *language;
  int64_t timestamp;
};
#define ODIN__V1__SESSION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&odin__v1__session_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * Audio data with sample rate information
 */
struct  Odin__V1__AudioData
{
  ProtobufCMessage base;
  ProtobufCBinaryData audio_data;
  int32_t sample_rate;
};
#define ODIN__V1__AUDIO_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&odin__v1__audio_data__descriptor) \
    , {0,NULL}, 0 }


/* Odin__V1__SessionInfo methods */
void   odin__v1__session_info__init
                     (Odin__V1__SessionInfo         *message);
size_t odin__v1__session_info__get_packed_size
                     (const Odin__V1__SessionInfo   *message);
size_t odin__v1__session_info__pack
                     (const Odin__V1__SessionInfo   *message,
                      uint8_t             *out);
size_t odin__v1__session_info__pack_to_buffer
                     (const Odin__V1__SessionInfo   *message,
                      ProtobufCBuffer     *buffer);
Odin__V1__SessionInfo *
       odin__v1__session_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   odin__v1__session_info__free_unpacked
                     (Odin__V1__SessionInfo *message,
                      ProtobufCAllocator *allocator);
/* Odin__V1__AudioData methods */
void   odin__v1__audio_data__init
                     (Odin__V1__AudioData         *message);
size_t odin__v1__audio_data__get_packed_size
                     (const Odin__V1__AudioData   *message);
size_t odin__v1__audio_data__pack
                     (const Odin__V1__AudioData   *message,
                      uint8_t             *out);
size_t odin__v1__audio_data__pack_to_buffer
                     (const Odin__V1__AudioData   *message,
                      ProtobufCBuffer     *buffer);
Odin__V1__AudioData *
       odin__v1__audio_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   odin__v1__audio_data__free_unpacked
                     (Odin__V1__AudioData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Odin__V1__SessionInfo_Closure)
                 (const Odin__V1__SessionInfo *message,
                  void *closure_data);
typedef void (*Odin__V1__AudioData_Closure)
                 (const Odin__V1__AudioData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor odin__v1__session_info__descriptor;
extern const ProtobufCMessageDescriptor odin__v1__audio_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_odin_2fv1_2fcommon_2eproto__INCLUDED */
